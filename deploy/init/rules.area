alias
key furniture container equipment food drink item

alias
glow poison affect

alias
dungeon room

def
affect Phud\Affects
<?php
return function($parser, $affect) {
	$parser->getLastAdded()->addAffect(new $affect($parser->loadRequired([], ['properties'])));
};
?>~

def
door Phud
<?php
return function($parser, $door) {
	$parser->setLastAdded(new $door($parser->loadRequired(['short', 'long'], ['properties'])));
};
?>~

def
quest Phud\Quests
<?php
return function($parser, $quest) {
	while($id = $parser->readLine()) {
		$quest = $quest::getByID($id);
		if($quest) {
			$parser->getLastAdded()->addQuest($quest);
		} else {
			Phud\Debug::log('Quest not found: '.$id);
		}
	}
};
?>~

def
room Phud
<?php
return function($parser, $room) {
	$room = new $room($parser->loadRequired(
		['title', 'description' => 'block', 'parser'], 
		['properties' => function(&$p, $property, $value) {
			$long = ['north', 'south', 'east', 'west', 'up', 'down'];
			foreach($long as $l) {
				if(strpos($l, $property) === 0) {
					$p[$l] = $value;
					return true;
				}
			}
	}]));
	$parser->setLastRoom($room);
};
?>~

def
item Phud\Items
<?php
return function($parser, $class) {
	$item = new $class($parser->loadRequired(['short', 'long' => 'block'], ['properties', 'attributes']));
	$parser->setLastAdded($item);
	$parser->getLastFirstClass()->addItem($item);
};
?>~

def
mob Phud\Actors
<?php
return function($parser, $mob) {
	$p = $parser->loadRequired(['alias', 'long' => 'block'], ['properties', 'attributes', 'abilities']);

	// count is for adding more than one copy of the actor to a room. Useful
	// for populating dungeons.
	if(isset($p['count'])) {
		$count = $p['count'];
		unset($p['count']);
	} else {
		$count = 1;
	}
	for($i = 0; $i < $count; $i++) {
		$mob = new $mob($p);
		$room = $parser->getLastRoom();
		if($room instanceof Phud\Dungeon) {
			$room = Phud\Dungeon::getRandomByArea($room->getArea());
		}
		$mob->setRoom($room);
		if(!$mob->getArea()) {
			$mob->setArea($parser->getLastRoom()->getArea());
		}
		$parser->setLastFirstClass($mob);
	}
};
?>~

def
shopkeeper Phud\Actors
<?php
return function($parser, $shopkeeper) {
	$keeper = new $shopkeeper($parser->loadRequired(['alias', 'long' => 'block'], ['properties']));
	$keeper->addAbility(Phud\Abilities\Ability::lookup('haggle'));
	$keeper->setRoom($parser->getLastRoom());
	if(!$keeper->getArea()) {
		$keeper->setArea($parser->getLastRoom()->getArea());
	}
	$parser->setLastFirstClass($keeper);
};
?>~

def
questmaster Phud\Actors
<?php
return function($parser, $questmaster) {
	$master = new $questmaster($parser->loadRequired(['alias', 'long' => 'block'], ['properties']));
	$master->setRoom($parser->getLastRoom());
	if(!$master->getArea()) {
		$master->setArea($parser->getLastRoom()->getArea());
	}
	$parser->setLastFirstClass($master);
};
?>~
