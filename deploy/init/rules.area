alias
key furniture container equipment food drink item

alias
glow poison affect

def
affect Phud\Affects
<?php
return function($area, $affect) {
	$area->getLastAdded()->addAffect(new $affect($area->loadRequired([], ['properties'])));
};
?>~

def
door Phud
<?php
return function($area, $door) {
	$area->setLastAdded(new $door($area->loadRequired(['short', 'long'], ['properties'])));
};
?>~

def
quest Phud\Quests
<?php
return function($area, $quest) {
	while($id = $area->readLine()) {
		$quest = $quest::getByID($id);
		if($quest) {
			$area->getLastAdded()->addQuest($quest);
		} else {
			Phud\Debug::log('Quest not found: '.$id);
		}
	}
};
?>~

def
room Phud
<?php
return function($area, $room) {
	$room = new $room($area->loadRequired(
		['title', 'description' => 'block', 'area'], 
		['properties' => function(&$p, $property, $value) {
			$long = ['north', 'south', 'east', 'west', 'up', 'down'];
			foreach($long as $l) {
				if(strpos($l, $property) === 0) {
					$p[$l] = $value;
					return true;
				}
			}
	}]));
	$area->setLastRoom($room);
};
?>~

def
item Phud\Items
<?php
return function($area, $class) {
	$item = new $class($area->loadRequired(['short', 'long' => 'block'], ['properties', 'attributes']));
	$area->setLastAdded($item);
	$area->getLastFirstClass()->addItem($item);
};
?>~

def
mob Phud\Actors
<?php
return function($area, $mob) {
	$mob = new $mob($area->loadRequired(['alias', 'long' => 'block'], ['properties', 'attributes', 'abilities']));
	$mob->setRoom($area->getLastRoom());
	if(!$mob->getArea()) {
		$mob->setArea($area->getLastRoom()->getArea());
	}
	$area->setLastFirstClass($mob);
};
?>~

def
shopkeeper Phud\Actors
<?php
return function($area, $shopkeeper) {
	$keeper = new $shopkeeper($area->loadRequired(['alias', 'long' => 'block'], ['properties']));
	$keeper->addAbility(Phud\Abilities\Ability::lookup('haggle'));
	$keeper->setRoom($area->getLastRoom());
	if(!$keeper->getArea()) {
		$keeper->setArea($area->getLastRoom()->getArea());
	}
	$area->setLastFirstClass($keeper);
};
?>~

def
questmaster Phud\Actors
<?php
return function($area, $questmaster) {
	$master = new $questmaster($area->loadRequired(['alias', 'long' => 'block'], ['properties']));
	$master->setRoom($area->getLastRoom());
	if(!$master->getArea()) {
		$master->setArea($area->getLastRoom()->getArea());
	}
	$area->setLastFirstClass($master);
};
?>~
